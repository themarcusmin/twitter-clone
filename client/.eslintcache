[{"c:\\Beluga\\JS\\twitter-clone\\client\\src\\index.js":"1","c:\\Beluga\\JS\\twitter-clone\\client\\src\\app.js":"2","c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\UserContext.js":"3","c:\\Beluga\\JS\\twitter-clone\\client\\src\\UnAuthenticatedApp.js":"4","c:\\Beluga\\JS\\twitter-clone\\client\\src\\AuthenticatedApp.js":"5","c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\useFindUser.js":"6","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Loading.js":"7","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Landing.js":"8","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Navbar.js":"9","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\RightPanel.js":"10","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\MakeTweet.js":"11","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Explore.js":"12","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Notification.js":"13","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Signup.js":"14","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Login.js":"15","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\BeginPasswordReset.js":"16","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\SendPasswordReset.js":"17","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Profile.js":"18","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Logout.js":"19","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Feed.js":"20","c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\Search.js":"21","c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\useAuth.js":"22","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\ProfileTweet.js":"23","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\ProfileLike.js":"24","c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\SocketContext.js":"25","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Followers.js":"26","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Network.js":"27","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Following.js":"28","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Profile404.js":"29"},{"size":319,"mtime":1610707299976,"results":"30","hashOfConfig":"31"},{"size":655,"mtime":1610719428169,"results":"32","hashOfConfig":"31"},{"size":450,"mtime":1610708055432,"results":"33","hashOfConfig":"31"},{"size":980,"mtime":1610719380152,"results":"34","hashOfConfig":"31"},{"size":2308,"mtime":1611843647613,"results":"35","hashOfConfig":"31"},{"size":517,"mtime":1610708047773,"results":"36","hashOfConfig":"31"},{"size":401,"mtime":1611831921291,"results":"37","hashOfConfig":"31"},{"size":2078,"mtime":1610703432165,"results":"38","hashOfConfig":"31"},{"size":6714,"mtime":1611689471572,"results":"39","hashOfConfig":"31"},{"size":817,"mtime":1610722013689,"results":"40","hashOfConfig":"31"},{"size":3058,"mtime":1610823621069,"results":"41","hashOfConfig":"31"},{"size":395,"mtime":1610823782565,"results":"42","hashOfConfig":"31"},{"size":317,"mtime":1610823675239,"results":"43","hashOfConfig":"31"},{"size":2768,"mtime":1610723967852,"results":"44","hashOfConfig":"31"},{"size":2075,"mtime":1610723958845,"results":"45","hashOfConfig":"31"},{"size":1502,"mtime":1610723978629,"results":"46","hashOfConfig":"31"},{"size":1664,"mtime":1610723973077,"results":"47","hashOfConfig":"31"},{"size":7730,"mtime":1611846557087,"results":"48","hashOfConfig":"31"},{"size":865,"mtime":1610700175228,"results":"49","hashOfConfig":"31"},{"size":1500,"mtime":1610962794264,"results":"50","hashOfConfig":"31"},{"size":998,"mtime":1610030348068,"results":"51","hashOfConfig":"31"},{"size":2797,"mtime":1611679182647,"results":"52","hashOfConfig":"31"},{"size":783,"mtime":1610963322212,"results":"53","hashOfConfig":"31"},{"size":164,"mtime":1610963010529,"results":"54","hashOfConfig":"31"},{"size":1168,"mtime":1611585062432,"results":"55","hashOfConfig":"31"},{"size":504,"mtime":1611820817314,"results":"56","hashOfConfig":"31"},{"size":3242,"mtime":1611848065870,"results":"57","hashOfConfig":"31"},{"size":530,"mtime":1611831582973,"results":"58","hashOfConfig":"31"},{"size":1704,"mtime":1611846531428,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1cjdcm0",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"c:\\Beluga\\JS\\twitter-clone\\client\\src\\index.js",[],["122","123"],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\app.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\UserContext.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\UnAuthenticatedApp.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\AuthenticatedApp.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\useFindUser.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Loading.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Landing.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Navbar.js",["124"],"import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Logout from '../auth/Logout'\r\nimport { useUserContext } from '../utils/UserContext'\r\n\r\nimport twitterLogo from '../styles/twitterLogo.png'\r\nimport userLogo from '../styles/user.svg'\r\nimport ellipsis from '../styles/ellipsis.svg'\r\n\r\nconst Navbar = () => {\r\n    const { user } = useUserContext()\r\n    // Logout mini-modal\r\n    const [logoutBtn, setLogoutBtn] = useState(false)\r\n    // Toggle Navbar colors\r\n    const [activeNav, setActiveNav] = useState(\"home\")\r\n    const activeSvg = (currentNav) => {\r\n        return activeNav === currentNav ? \"active-svg\" : \"inactive-svg\"\r\n    }\r\n    const activeText = (currentNav) => {\r\n        return activeNav === currentNav ? \"active-text\" : \"inactive-text\"\r\n    }\r\n    const notificationSeen = () => {\r\n        console.log(\"update db and remove red popup\")\r\n    }\r\n    //test\r\n    const redisPublish = async () => {\r\n        try {\r\n            const response = await fetch('/test/pub', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ tweet: 'How are yall?' }),\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            })\r\n            const data = await response.json()\r\n            console.log(data)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    const testuserid = async () => {\r\n        try {\r\n            const response = await fetch('/read-cookies', {\r\n                method: 'GET'\r\n            })\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"relative overflow-y-hidden hidden sm:block sm:w-2/6 md:w-1/4\">\r\n            <div className=\"flex flex-col py-3 px-2 space-y-3 w-full justify-start\">\r\n                <Link to=\"/home\">\r\n                    <div className=\"hover:bg-gray-800 rounded-full flex items-center justify-center w-12 h-12 ml-2\">\r\n                        <img className=\"w-7\" src={twitterLogo} alt=\"Twitter Logo\" />\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/home\">\r\n                    <div onClick={() => setActiveNav(\"home\")} className=\"group flex flex-row space-x-3 hover:bg-gray-800 w-min rounded-full py-2 px-4\">\r\n                        <svg className={activeSvg(\"home\")} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6\" />\r\n                        </svg>\r\n                        <div className={activeText(\"home\")}>Home</div>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/explore\">\r\n                    <div onClick={() => setActiveNav(\"explore\")} className=\"group flex flex-row space-x-3 hover:bg-gray-800 w-min rounded-full py-2 px-4\">\r\n                        <svg className={activeSvg(\"explore\")} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 20l4-16m2 16l4-16M6 9h14M4 15h14\" />\r\n                        </svg>\r\n                        <div className={activeText(\"explore\")}>Explore</div>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/notifications\">\r\n                    <div onClick={() => {\r\n                        setActiveNav(\"notification\");\r\n                        notificationSeen();\r\n                    }} className=\"relative group flex flex-row space-x-3 hover:bg-gray-800 w-min rounded-full py-2 px-4\">\r\n                        <svg className={activeSvg(\"notification\")} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\" />\r\n                        </svg>\r\n                        <div className={activeText(\"notification\")}>Notifications</div>\r\n                        <div className=\"absolute top-0 right-0 rounded-full w-6 h-6 text-white text-center opacity-80 bg-red-400 group-hover:bg-red-600 group-hover:opacity-100\">\r\n                            1\r\n                        </div>\r\n                        {/* UI todo: if activenav is notification delete red popup */}\r\n                    </div>\r\n                </Link>\r\n                <Link to={`/profile/${user.username}`}>\r\n                    <div onClick={() => setActiveNav(\"profile\")} className=\"group flex flex-row space-x-3 hover:bg-gray-800 w-min rounded-full py-2 px-4\">\r\n                        <svg className={activeSvg(\"profile\")} xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                        </svg>\r\n                        <div className={activeText(\"profile\")}>Profile</div>\r\n                    </div>\r\n                </Link>\r\n                <Link to=\"/profile/sample\">\r\n                    <div>sample</div>\r\n                </Link>\r\n                {/* test */}\r\n                <button type=\"button\" onClick={() => redisPublish()}>pub sth</button>\r\n                <button type=\"button\" onClick={() => testuserid()}>test userid</button>\r\n                {/* Clickable Username */}\r\n                <div onClick={() => setLogoutBtn(!logoutBtn)} className=\"absolute bottom-3 cursor-pointer group flex flex-row items-center hover:bg-gray-800 w-auto rounded-full py-2 px-4 md:px-3 sm:px-2\">\r\n                    <img className=\"w-8 h-8\" src={userLogo} alt=\"Profile Icon\" />\r\n                    <div className=\"mx-4 group-hover:text-blue-500 flex flex-col text-sm\">\r\n                        <div className=\"font-bold sm:text-xs\">{`${user.fullname}`}</div>\r\n                        <div className=\"sm:text-xs\">{`@${user.username}`}</div>\r\n                    </div>\r\n                    <img className=\"w-6 h-6\" src={ellipsis} alt=\"\" />\r\n                </div>\r\n                {/* Logout Button Visible after click */}\r\n                {logoutBtn && (\r\n                    <Logout />\r\n                )}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Navbar;","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\RightPanel.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\MakeTweet.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Explore.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Notification.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Signup.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Login.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\BeginPasswordReset.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\SendPasswordReset.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Profile.js",["125","126"],"import React, { Fragment, useState, useEffect } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport Profile404 from './Profile404'\r\n\r\nimport backArrow from './svg/backArrow.svg'\r\nimport calendar from './svg/calendar.svg'\r\nimport userLogo from '../../styles/user.svg'\r\n\r\n/**\r\n * function:\r\n * 1 - render loading page if fetching\r\n * 2 - render error page if fetching fails\r\n * 3 - render profile page if fetching is successful\r\n */\r\n\r\nconst ProfileTweet = React.lazy(() => import('./ProfileTweet'))\r\nconst ProfileLike = React.lazy(() => import('./ProfileLike'))\r\n\r\nfunction UnixTimeToMonthYear(t) {\r\n    return new Date(t).toLocaleString('default', { month: 'long', year: 'numeric' })\r\n}\r\n\r\nconst Profile = () => {\r\n    const history = useHistory()\r\n    const { username } = useParams()\r\n    const [error, setError] = useState(false)\r\n    const [profile, setProfile] = useState(null)\r\n    // fetch profile data\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const response = await fetch(`/api/profile/${username}`, {\r\n                method: 'GET'\r\n            })\r\n            const data = await response.json()\r\n            setProfile(data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    // toggle profile navbar between tweets and likes\r\n    const [activeNav, setActiveNav] = useState(\"Tweets\")\r\n    const cssNav = (currentNav) => {\r\n        return activeNav === currentNav ? \"active-profile-nav\" : \"inactive-profile-nav\"\r\n    }\r\n\r\n    return (\r\n        error ? (\r\n            <Profile404 username={username} />\r\n        ) : (\r\n                <Fragment>\r\n                    {/* header */}\r\n                    <div className=\"sticky-header default-tweet-border flex flex-row space-x-3\">\r\n                        <button onClick={() => history.goBack()} className=\"w-8 h-8 flex items-center justify-center rounded-full hover:bg-blue-400 hover:bg-opacity-10\">\r\n                            <img className=\"w-4 h-4\" src={backArrow} alt=\"Back Button\" />\r\n                        </button>\r\n                        <div className=\"flex flex-col\">\r\n                            {profile ? (\r\n                                <Fragment>\r\n                                    <div className=\"font-bold\">{`${profile.username}`}</div>\r\n                                    <div className=\"text-xs text-gray-400\">{`${profile.tweetCount} Tweets`}</div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                    <Fragment>\r\n                                        <div className=\"bg-gray-600 w-20 h-4 rounded-md mb-2\" />\r\n                                        <div className=\"bg-gray-600 w-10 h-4 rounded-md\" />\r\n                                    </Fragment>\r\n                                )}\r\n                        </div>\r\n                    </div>\r\n                    {/* general details */}\r\n                    <div className=\"relative h-auto border border-gray-600 border-t-0 border-b-0 flex flex-col\">\r\n                        <div className=\"bg-twitterProfileCover h-40 relative\"></div>\r\n                        <img className=\"absolute w-28 h-28 top-28 left-4 border-4 border-twitterBlue rounded-full\" src={userLogo} alt=\"Profile Icon\" />\r\n                        <div className=\"relative h-40 flex flex-col py-2 justify-end px-3 space-y-2 text-xs text-gray-400 \">\r\n                            <button className=\"absolute m-3 right-0 top-0 px-3 rounded-full border border-twitterBtn text-twitterBtn hover:bg-blue-400 hover:bg-opacity-10 font-bold text-sm py-2 focus:outline-none\">\r\n                                Edit Profile\r\n                    </button>\r\n                            <div className=\"flex flex-col\">\r\n                                {profile ? (\r\n                                    <Fragment>\r\n                                        <div className=\"text-sm font-bold text-white\">{`${profile.fullname}`}</div>\r\n                                        <div className=\"\">{`@${profile.username}`}</div>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"bg-gray-600 w-20 h-4 rounded-md mb-2\" />\r\n                                            <div className=\"bg-gray-600 w-20 h-4 rounded-md\" />\r\n                                        </Fragment>\r\n                                    )}\r\n                            </div>\r\n                            <div className=\"flex flex-row space-x-1\">\r\n                                {profile ? (\r\n                                    <Fragment>\r\n                                        <img className=\"h-4 w-4\" src={calendar} alt=\"Calender Logo\" />\r\n                                        <div>{\"Joined \" + UnixTimeToMonthYear(parseInt(profile.signup))}</div>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                        <div className=\"bg-gray-600 w-14 h-4 rounded-md\" />\r\n                                    )}\r\n                            </div>\r\n                            <div className=\"flex flex-row space-x-2\">\r\n                                {profile ? (\r\n                                    <Fragment>\r\n                                        <Link to={`/profile/${username}/following`}>\r\n                                            <div className=\"cursor-pointer hover:underline\">\r\n                                                <span className=\"text-white font-bold\">\r\n                                                    {`${profile.following}`}\r\n                                                </span> Following\r\n                                </div>\r\n                                        </Link>\r\n                                        <Link to={`/profile/${username}/followers`}>\r\n                                            <div className=\"cursor-pointer hover:underline\">\r\n                                                <span className=\"text-white font-bold\">\r\n                                                    {`${profile.followers}`}\r\n                                                </span> Followers\r\n                                    </div>\r\n                                        </Link>\r\n                                    </Fragment>\r\n                                ) : (\r\n                                        <Fragment>\r\n                                            <div className=\"bg-gray-600 w-14 h-4 rounded-md\" />\r\n                                            <div className=\"bg-gray-600 w-14 h-4 rounded-md\" />\r\n                                        </Fragment>\r\n                                    )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* navbar */}\r\n                    <div className=\"h-10 w-full flex flex-row text-sm border-l border-r border-gray-600\">\r\n                        <div onClick={() => setActiveNav(\"Tweets\")} className={cssNav(\"Tweets\")}>\r\n                            Tweets\r\n                    </div>\r\n                        <div onClick={() => setActiveNav(\"Likes\")} className={cssNav(\"Likes\")}>\r\n                            Likes\r\n                    </div>\r\n                    </div>\r\n                    {/* render tweets or likes */}\r\n                    {\r\n                        activeNav === \"Tweets\" ? (\r\n                            <ProfileTweet />\r\n                        ) : (\r\n                                <ProfileLike />\r\n                            )\r\n                    }\r\n                </Fragment>\r\n            )\r\n    )\r\n}\r\n\r\nexport default Profile","c:\\Beluga\\JS\\twitter-clone\\client\\src\\auth\\Logout.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Feed.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\Search.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\useAuth.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\ProfileTweet.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\ProfileLike.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\utils\\SocketContext.js",["127"],"import { createContext, useContext, useEffect } from 'react'\r\nimport { useUserContext } from './UserContext'\r\n\r\nconst timelineData = {\r\n    homeTimeline: {},\r\n    profileTimeline: {},\r\n    likeTimeline: {},\r\n}\r\n\r\nconst SocketContext = createContext(timelineData)\r\n\r\nexport const useWebSocket = () => {\r\n    return useContext(SocketContext)\r\n}\r\n\r\nexport const SocketProvider = ({ children }) => {\r\n\r\n    const { user } = useUserContext()\r\n\r\n    useEffect(() => {\r\n        const ws = new WebSocket('ws://localhost:5000/')\r\n        ws.onopen = () => {\r\n            console.log(\"socket connection established\")\r\n            ws.send(JSON.stringify({ online: user._id }))\r\n            // ws.send(\"online:\" + user._id)\r\n        }\r\n        ws.onmessage = (e) => {\r\n            // parse data to get title: depending on title notification or lpush tweet on context\r\n            console.log(e.data)\r\n        }\r\n\r\n        ws.onclose = () => {\r\n            console.log(\"browser is closed now\")\r\n            ws.close()\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <SocketContext.Provider value={SocketContext}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}","c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Followers.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Network.js",["128"],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Following.js",[],"c:\\Beluga\\JS\\twitter-clone\\client\\src\\components\\Profile\\Profile404.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":43,"column":19,"nodeType":"135","messageId":"136","endLine":43,"endColumn":27},{"ruleId":"133","severity":1,"message":"137","line":26,"column":19,"nodeType":"135","messageId":"136","endLine":26,"endColumn":27},{"ruleId":"138","severity":1,"message":"139","line":38,"column":8,"nodeType":"140","endLine":38,"endColumn":10,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":36,"column":8,"nodeType":"140","endLine":36,"endColumn":10,"suggestions":"143"},{"ruleId":"138","severity":1,"message":"139","line":33,"column":8,"nodeType":"140","endLine":33,"endColumn":10,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["148"],["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"150","fix":"154"},"Update the dependencies array to be: [username]",{"range":"155","text":"156"},"Update the dependencies array to be: [user._id]",{"range":"157","text":"158"},{"range":"159","text":"156"},[1241,1243],"[username]",[1024,1026],"[user._id]",[1096,1098]]